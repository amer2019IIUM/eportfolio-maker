extend type Mutation {
    createSkill(input: CreateSkillInput! @spread): Skill @create

    updateSkill(id: ID!, input: UpdateSkillInput! @spread): Skill @update

    deleteSkill(id: ID!): Skill @delete
}

extend type Query {
    skills(orderBy: _ @orderBy(columnsEnum: "SkillColumns")): [Skill!]!
        @paginate(type: PAGINATOR, defaultCount: 10)
    skill(id: ID @eq): Skill @find
}

type Skill {
    id: ID!
    title: String
    lang: String!
    type: String!
    sort: Int!
    percentage: Int
    hidden_portfolio: Boolean
    hidden_resume: Boolean
    created_at: DateTime
    updated_at: DateTime
    user: User @belongsTo
}

input CreateSkillInput {
    title: String!
    type: String!
    lang: String
    sort: Int
    percentage: Int!
    user: CreateUserBelongsTo
}

input UpdateSkillInput {
    title: String
    type: String
    lang: String
    sort: Int
    percentage: Int
}

input CreateUserBelongsTo {
    connect: ID
}
