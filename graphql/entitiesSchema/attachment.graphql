extend type Mutation {
    createAttachment(input: CreateAttachmentInputs!): Attachment! @create

    deleteAttachment(attachable_id: Int!): Attachment @delete
}
extend type Query {
    attachments(
        orderBy: _ @orderBy(columnsEnum: "AttachmentColumns")
    ): [Attachment!]! @paginate(type: PAGINATOR, defaultCount: 10)

    attachment(id: ID @eq): Attachment @find
}

type Attachment {
    id: ID!
    title: String!
    link: String!
    attachable_id: Int!
    attachable_type: String!
    type: String!
    created_at: DateTime
    updated_at: DateTime
    attachable: Attachable! @morphTo
}
union Attachable = Project | Profile

input CreateAttachmentInputs {
    path: String
    disk_name: String
    type: AttachmentTypes!
    file_name: String
    thumbnail: Boolean
    attachable: CreateAttachableMorphTo
}
input CreateAttachableMorphTo {
    connect: ConnectAttachableInput
    disconnect: Boolean
    delete: Boolean
}
input ConnectAttachableInput {
    type: AttachableTypes!
    id: ID!
}
enum AttachableTypes {
    ad
    user
}
